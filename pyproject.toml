[build-system]
requires = ["poetry>=1.0.0"]
build-backend = "poetry.masonry.api"

[tool.poetry]
# Description
name = "dash-material-components"
version = "1.1.1"
description = "Dash Material Design components for the Noos platform."
# Credentials
license = "MIT"
authors = ["Noos Energy <contact@noos.energy>"]
homepage = "https://github.com/noosenergy/dash-material-components"
# Package data
readme = "README.md"
packages = [
    { include = "dash_material_components"},
]
include = [
    "dash_material_components/*.py",
    "dash_material_components/*.js",
    "dash_material_components/*.js.map",
    "dash_material_components/metadata.json",
    "dash_material_components/package-info.json",
    "dash_material_components/themes/static/*.png",
    "README.md",
    "LICENSE",
    "package.json",
]
# Distribution
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.11",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.11"
# https://github.com/GibbsConsulting/django-plotly-dash/blob/master/requirements.txt
dash = ">=2.0,<2.10"

[tool.poetry.dev-dependencies]
dash = { version = "*", extras = ["dev", "testing"] }
selenium = "*"
# Format
isort = "*"
black = "*"
# Linter
pydocstyle = "*"
flake8 = "*"
mypy = "*"
# Debugging
ipdb = "*"
ipython = "*"
jupyterlab = "*"
jupyter-dash = "*"

[tool.black]
line-length = 99
target_version = ['py311']

[tool.isort]
line_length = 99
profile = "black"
multi_line_output = 3
lines_after_imports = 2
default_section = "THIRDPARTY"
known_first_party = "dash_material_components,tests"
sections = "STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"

[tool.mypy]
install_types = true
non_interactive = true
incremental = true
warn_unused_configs = true
warn_unused_ignores = true
check_untyped_defs = true
warn_redundant_casts = true
ignore_missing_imports = true

[tool.pytest.ini_options]
python_files = "test_*.py"
python_classes = "Test"
python_functions = "test_*"
junit_family = "xunit2"
filterwarnings = [
    "error::RuntimeWarning",
    "ignore::DeprecationWarning",
    "ignore::UserWarning"
]
addopts = "--headless --webdriver=Firefox --junitxml=.pytest_results/junit.xml"
