[build-system]
requires = ["poetry>=1.0.0"]
build-backend = "poetry.masonry.api"

[tool.poetry]
# Description
name = "dash-material-components"
version = "2.0.11"
description = "Dash Material Design components for the Noos platform."
# Credentials
license = "MIT"
authors = ["Noos Energy <contact@noos.energy>"]
homepage = "https://github.com/noosenergy/dash-material-components"
# Package data
readme = "README.md"
packages = [
    { include = "dash_material_components"},
]
include = [
    "dash_material_components/*.py",
    "dash_material_components/*.js",
    "dash_material_components/*.js.map",
    "dash_material_components/metadata.json",
    "dash_material_components/package-info.json",
    "dash_material_components/themes/static/*.png",
    "README.md",
    "LICENSE",
    "package.json",
]
# Distribution
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.12"
# https://github.com/GibbsConsulting/django-plotly-dash/blob/master/requirements.txt
dash = ">=2.10,<3.0"

[tool.poetry.dev-dependencies]
dash = { version = "*", extras = ["dev", "testing"] }
selenium = ">=4.0"
# Linter
ruff = "*"
mypy = "*"
# Debugging
ipdb = "*"
ipython = "*"
jupyterlab = "*"

[tool.ruff]
line-length = 99
src = ["src"]

[tool.ruff.lint]
ignore = [
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107", # Pydocstyle
    "F405", "W391", "E203", "E701" # Flake8
]
select = ["E", "I", "F"]

[tool.ruff.lint.isort]
lines-after-imports = 2
default-section = "third-party"
known-first-party = ["dash_material_components", "tests"]
section-order = ["standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.mypy]
install_types = true
non_interactive = true
incremental = true
warn_unused_configs = true
warn_unused_ignores = true
check_untyped_defs = true
warn_redundant_casts = true
ignore_missing_imports = true

[tool.pytest.ini_options]
python_files = "test_*.py"
python_classes = "Test"
python_functions = "test_*"
junit_family = "xunit2"
filterwarnings = [
    "error::RuntimeWarning",
    "ignore::DeprecationWarning",
    "ignore::UserWarning"
]
addopts = "--headless --webdriver=Firefox --junitxml=.pytest_results/junit.xml"
