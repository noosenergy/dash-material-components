---
version: 2.1

default:
  install: &uv_install
    pkg_manager: uv
    install_args: --dev
  filter: &release_filters
    filters:
      tags:
        only: /[0-9]+(\.[0-9]+)*(-alpha\.[0-9]+)?/
      branches:
        ignore: /.*/

# ----------------
# Orbs declaration
# ----------------

orbs:
  noos-ci: noosenergy/noos-ci@0.4.3

# --------------
# Pipeline tasks
# --------------

jobs:
  lint_library:
    executor: noos-ci/default
    steps:
      - checkout
      - run:
          name: Lint JavaScript library
          command: yarn install --frozen-lockfile && yarn lint

  test_library:
    executor: noos-ci/default
    steps:
      - checkout
      - run:
          name: Run JavaScript tests
          command: yarn install --frozen-lockfile && yarn test

  build_library:
    executor: noos-ci/default
    steps:
      - checkout
      - noos-ci/python_configure_venv:
          <<: *uv_install
      - run:
          name: Build JavaScript library
          command: yarn install --frozen-lockfile && yarn build
      - persist_to_workspace:
          root: .
          paths:
            - dash_material_components
            - node_modules

  lint_package:
    executor: noos-ci/default
    steps:
      - checkout
      - noos-ci/python_lint_package:
          src_directory: ./dash_material_components
          <<: *uv_install

  test_package:
    executor: noos-ci/default
    steps:
      - checkout
      - attach_workspace:
          at: .
      - noos-ci/python_test_package:
          tests_directory: ./tests
          <<: *uv_install
      - store_test_results:
          path: '.pytest_results'

  build_wheel:
    executor: noos-ci/default
    steps:
      - checkout
      - attach_workspace:
          at: .
      - noos-ci/python_build_wheel:
          <<: *uv_install
      - store_artifacts:
          path: dist
          destination: wheel

  publish_wheel:
    executor: noos-ci/default
    steps:
      - checkout
      - attach_workspace:
          at: .
      - noos-ci/python_publish_wheel:
          <<: *uv_install

# -----------------
# Pipeline workflow
# -----------------

workflows:
  version: 2

  lint_test_build:
    jobs:
      - lint_library
      - test_library
      - build_library:
          requires: [lint_library, test_library]
      - lint_package
      - test_package:
          requires: [build_library]
      - build_wheel:
          requires: [lint_package, test_package]

  publish:
    jobs:
      - approve_for_publishing:
          type: approval
          <<: *release_filters
      - build_library:
          requires: [approve_for_publishing]
          <<: *release_filters
      - publish_wheel:
          context: PYPI_SHARED
          requires: [build_library]
          <<: *release_filters
