---
version: 2.1

# ----------------
# Orbs declaration
# ----------------

orbs:

  noos-ci: noosenergy/noos-ci@0.1.14


# --------------
# Pipeline tasks
# --------------

jobs:

  lint-package:
    executor: noos-ci/default
    steps:
      - checkout
      - noos-ci/python-lint-package:
          pkg-manager: poetry
          install-args: ''
          src-directory: ./dash_mdc_neptune

  lint-library:
    executor: noos-ci/default
    steps:
      - checkout
      - run:
          name: Lint JavaScript library
          command: yarn install && yarn lint

  build-library:
    executor: noos-ci/default
    steps:
      - checkout
      - noos-ci/python-configure-venv:
          pkg-manager: poetry
          install-args: ''
      - run:
          name: Build JavaScript library
          command: yarn install && yarn build
      - persist_to_workspace:
          root: .
          paths:
            - dash_mdc_neptune

  test-package:
    executor: noos-ci/default
    steps:
      - checkout
      - attach_workspace:
          at: .
      - noos-ci/python-test-package:
          pkg-manager: poetry
          install-args: ''
          tests-directory: ./tests

  build-wheel:
    executor: noos-ci/default
    steps:
      - checkout
      - attach_workspace:
          at: .
      - noos-ci/python-build-wheel:
          pkg-manager: poetry
          install-args: ''
      - store_artifacts:
          path: dist
          destination: wheel

  publish-wheel:
    executor: noos-ci/default
    steps:
      - checkout
      - attach_workspace:
          at: .
      - noos-ci/python-publish-wheel:
          pkg-manager: poetry
          install-args: ''


# -----------------
# Pipeline workflow
# -----------------

workflows:

  version: 2

  lint-test-build:
    jobs:
      - lint-library
      - build-library:
          requires:
            - lint-library
      - lint-package
      - test-package:
          requires:
            - build-library
      - build-wheel:
          requires:
            - lint-package
            - test-package

  publish:
    jobs:
      - approve-for-publishing:
          type: approval
          filters:
            tags:
              # ONLY git tag compliant format: e.g. `0.0.1-alpha.01`
              only: /[0-9]+(\.[0-9]+)*(-alpha\.[0-9]+)?/
            branches:
              ignore: /.*/
      - build-library:
          requires:
            - approve-for-publishing
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*(-alpha\.[0-9]+)?/
            branches:
              ignore: /.*/
      - publish-wheel:
          context: PYPI_SHARED
          requires:
            - build-library
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*(-alpha\.[0-9]+)?/
            branches:
              ignore: /.*/
